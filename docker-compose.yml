version: "3.8"
services:
  postgres:
    restart: always
    image: postgres:13
    container_name: asv-db
    user: postgres
    volumes:
      # Files read (in alphanumeric order) during database startup,
      # and used to define database schema and roles
      - ./misc/db-data-schema.sql:/docker-entrypoint-initdb.d/01-data-schema.sql
      - ./misc/db-api-schema.sql:/docker-entrypoint-initdb.d/02-api-schema.sql
      - ./misc/db-roles.sql:/docker-entrypoint-initdb.d/03-roles.sql
      # Database files stored in an easily cleared local directory
      - ./postgres-data:/var/lib/postgresql/data
    # User and password information
    env_file:
      - .env
    # For debugging (e.g. in pgAdmin), connect a host port
    # to a container port (HOST:CONTAINER), but keep closed in production
    # ports:
    #   - 5432:5432
  postgrest:
    # https://hub.docker.com/r/postgrest/postgrest
    restart: always
    image: postgrest/postgrest:v7.0.1
    container_name: asv-rest
    # ports:
    #   - 3000:3000
    # Get most environment variables from the default .env file
    env_file:
      - .env
    environment:
      # Construct a postgres connection URI variable
      - PGRST_DB_URI=postgres://authenticator:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      - postgres
  blast-worker:
    build:
      context: ./
      dockerfile: docker/blast
    volumes:
      - ./blast-databases:/blastdbs
  develop:
    container_name: asv-main
    build:
      context: ./
      dockerfile: docker/develop
    volumes:
      - type: bind
        source: ./
        target: /code
    env_file:
      - .env
    ports:
      - 5000:5000
    depends_on:
      - postgrest
